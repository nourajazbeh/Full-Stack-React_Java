{"ast":null,"code":"var _jsxFileName = \"C:\\\\my-spring-boot-app\\\\my-react\\\\src\\\\components\\\\MessageComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport apiService from '../services/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageComponent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  const fetchMessages = async () => {\n    try {\n      const data = await getMessages();\n      setMessages(data);\n    } catch (error) {\n      console.error('Failed to fetch messages', error);\n    }\n  };\n  const handleSaveMessage = async () => {\n    try {\n      await saveMessage(newMessage);\n      fetchMessages();\n      setNewMessage('');\n    } catch (error) {\n      console.error('Failed to save message', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: message.content\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value),\n      placeholder: \"Enter new message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveMessage,\n      children: \"Save Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(MessageComponent, \"ppYy//Iy9fHF0/R/fKleZlFUFyc=\");\n_c = MessageComponent;\nexport default MessageComponent;\nvar _c;\n$RefreshReg$(_c, \"MessageComponent\");","map":{"version":3,"names":["React","useState","useEffect","apiService","jsxDEV","_jsxDEV","MessageComponent","_s","messages","setMessages","newMessage","setNewMessage","fetchMessages","data","getMessages","error","console","handleSaveMessage","saveMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","content","id","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/my-spring-boot-app/my-react/src/components/MessageComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport apiService from '../services/apiService';\r\n\r\nconst MessageComponent = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchMessages();\r\n    }, []);\r\n\r\n    const fetchMessages = async () => {\r\n        try {\r\n            const data = await getMessages();\r\n            setMessages(data);\r\n        } catch (error) {\r\n            console.error('Failed to fetch messages', error);\r\n        }\r\n    };\r\n\r\n    const handleSaveMessage = async () => {\r\n        try {\r\n            await saveMessage(newMessage);\r\n            fetchMessages();\r\n            setNewMessage('');\r\n        } catch (error) {\r\n            console.error('Failed to save message', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Messages</h1>\r\n            <ul>\r\n                {messages.map((message) => (\r\n                    <li key={message.id}>{message.content}</li>\r\n                ))}\r\n            </ul>\r\n            <input\r\n                type=\"text\"\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n                placeholder=\"Enter new message\"\r\n            />\r\n            <button onClick={handleSaveMessage}>Save Message</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MessageComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZU,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMC,WAAW,CAAC,CAAC;MAChCL,WAAW,CAACI,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAED,MAAME,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACA,MAAMC,WAAW,CAACR,UAAU,CAAC;MAC7BE,aAAa,CAAC,CAAC;MACfD,aAAa,CAAC,EAAE,CAAC;IACrB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,oBACIV,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBlB,OAAA;MAAAc,QAAA,EACKX,QAAQ,CAACgB,GAAG,CAAEC,OAAO,iBAClBpB,OAAA;QAAAc,QAAA,EAAsBM,OAAO,CAACC;MAAO,GAA5BD,OAAO,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuB,CAC7C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLlB,OAAA;MACIuB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEnB,UAAW;MAClBoB,QAAQ,EAAGC,CAAC,IAAKpB,aAAa,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,WAAW,EAAC;IAAmB;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFlB,OAAA;MAAQ6B,OAAO,EAAEjB,iBAAkB;MAAAE,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEd,CAAC;AAAChB,EAAA,CA5CID,gBAAgB;AAAA6B,EAAA,GAAhB7B,gBAAgB;AA8CtB,eAAeA,gBAAgB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}